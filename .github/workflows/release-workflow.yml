name: Website Release Pipeline

on: 
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      refBuildOverride:
        type: string
        description: 'Branch, tag or commit SHA1 to build'
        default: ''
      deploy:
        type: boolean
        description: 'Deploy To Website'
        default: 'true'
      logLevel:
        type: choice
        description: 'Log Level'
        default: 'error'
        options:
        - info
        - warning
        - error

env:
  REF_TO_BUILD: ${{ inputs.refBuildOverride != '' && inputs.refBuildOverride || github.sha }}
  IS_PR_GITHUB_EVENT: ${{ github.event_name == 'pull_request' && 'true' || 'false' }}
  DEPLOY: ${{ inputs.deploy }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # - name: DEBUG Get Github Variables
      #   run: |
      #     echo "${{toJSON(github)}}"

      - name: DEBUG echo github.sha
        run: echo ${{ github.sha }}

      - name: DEBUG echo inputs.refBuildOverride
        run: echo ${{ inputs.refBuildOverride }}

      - name: DEBUG echo inputs.deploy
        run: echo ${{ inputs.deploy }}

      - name: DEBUG echo env.DEPLOY
        run: echo ${{ env.DEPLOY }}

      - name: DEBUG echo env.REF_TO_BUILD
        run: echo ${{ env.REF_TO_BUILD }}

      - name: DEBUG echo env.IS_PR_GITHUB_EVENT
        run: echo ${{ env.IS_PR_GITHUB_EVENT }}

      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: ${{ env.REF_TO_BUILD }}

      - name: Setup node 14
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - run: npm install

      - run: npm run build

      - name: Deploy Website to Prod
        if: ${{ env.IS_PR_GITHUB_EVENT == 'false' && inputs.deploy == 'true' }}
        uses: garygrossgarten/github-action-scp@release
        with:
          local: dist/edison-earnest-site
          remote: /var/www/html
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.PASSWORD }}